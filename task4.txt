import secrets
import string

def generate_password(length, use_digits=True, use_special_chars=True):
    if length < 1:
        return "Error! Password length must be at least 1."
    
    character_sets = [string.ascii_letters]
    if use_digits:
        character_sets.append(string.digits)
    if use_special_chars:
        character_sets.append(string.punctuation)
    
    all_characters = ''.join(character_sets)
    
    password = [secrets.choice(charset) for charset in character_sets]
    
    password += [secrets.choice(all_characters) for _ in range(length - len(password))]
    
    secrets.SystemRandom().shuffle(password)
    
    return ''.join(password)

try:
    length = int(input("Enter the desired password length: "))
    use_digits = input("Include digits? (yes/no): ").strip().lower() == "yes"
    use_special_chars = input("Include special characters? (yes/no): ").strip().lower() == "yes"
    
    while True:
        password = generate_password(length, use_digits, use_special_chars)
        print(f"Generated Password: {password}")
        
        regenerate = input("Are you satisfied with this password? (yes/no): ").strip().lower()
        if regenerate == "yes":
            print("Great! Your password is ready to use.")
            break
        else:
            print("Generating a new password...\n")
            
except ValueError:
    print("Invalid input! Please enter a valid number for password length.")
